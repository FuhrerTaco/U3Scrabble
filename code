using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace SomestupidFingScrabbleGame
{
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
            ScrabbleGame sg = new ScrabbleGame();
            string hand  = sg.drawInitialTiles();
            MessageBox.Show(hand);
            string[] words = getWords();
            string[] newWords = checkWords(words, hand.ToCharArray());
        }

        private string[] checkWords(string[] words, char[] tiles)
        {
            int[] letters = new int[26];
            int blanks = 0;
            char[] wordChecking;
            List<string> s = new List<string>();
            for (int i = 0; i<letters.Length; i++)
            {
                letters[i] = 0;
            }
            for(int i = 0; i < tiles.Length;i++)
            {
                if (tiles[i].Equals(' ')) blanks++;
                else letters[tiles[i] - 65]++;
            }
            foreach (string word in words)
            {
                wordChecking = word.ToCharArray();
                int[] wordCheckingChars = new int[26];
                for (int i = 0; i < wordCheckingChars.Length; i++) wordCheckingChars[i] = 0;
                for (int i = 0; i < wordChecking.Length; i++)
                {
                    wordCheckingChars[wordChecking[i] - 65]++;
                }
                int extraLetters = 0;
                for (int i = 0; i < wordCheckingChars.Length; i++)
                {
                    if (wordCheckingChars[i] - letters[i] > 0) extraLetters+=wordCheckingChars[i]-letters[i];
                }
                if (extraLetters <= blanks) s.Add(word);
            }
            return s.ToArray();
        }

        private string[] getWords()
        {
            List < string > a = new List<string>();
            StreamReader sr = new StreamReader("Words.txt");
            string t;
            while(!sr.EndOfStream)
            {
                t = sr.ReadLine();
                if (t.Length <= 7)
                {
                    if (t.Length == 1 && t.ToCharArray()[0] <= 90 && t.ToCharArray()[0] >= 65) continue;
                    a.Add(t.ToUpper());
                    //Console.WriteLine(t);
                }
            }
            return a.ToArray();
        }

    }
}
